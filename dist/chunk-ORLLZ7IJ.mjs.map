{"version":3,"sources":["../src/hooks/useNormalizer.ts"],"sourcesContent":["import { useMemo } from \"react\";\n// Converts an array of objects into an object keyed by the given property.\n\nexport function useNormalizer<\n  T extends Record<string, any>,\n  K extends keyof T\n>(items: T[], key: K): Record<string, T> {\n  return useMemo(() => {\n    return items.reduce((acc, item) => {\n      const k = String(item[key]); \n      if (!(k in acc)) {\n        acc[k] = item; \n      }\n      return acc;\n    }, {} as Record<string, T>);\n  }, [items, key]);\n}\n"],"mappings":"yCAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,mBAAAE,IAAA,OAAS,WAAAC,MAAe,QAGjB,SAASD,EAGdE,EAAYC,EAA2B,CACvC,OAAOF,EAAQ,IACNC,EAAM,OAAO,CAACE,EAAKC,IAAS,CACjC,IAAMC,EAAI,OAAOD,EAAKF,CAAG,CAAC,EAC1B,OAAMG,KAAKF,IACTA,EAAIE,CAAC,EAAID,GAEJD,CACT,EAAG,CAAC,CAAsB,EACzB,CAACF,EAAOC,CAAG,CAAC,CACjB","names":["useNormalizer_exports","__export","useNormalizer","useMemo","items","key","acc","item","k"]}